set nocompatible              " be iMproved, required
filetype off                  " required by Vundle

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'vim-syntastic/syntastic'
Plugin 'cespare/vim-toml'
Plugin 'rust-lang/rust.vim'
Plugin 'tpope/vim-unimpaired'
Plugin 'vim-scripts/gtk-vim-syntax'
Plugin 'scrooloose/nerdtree'
Plugin 'scrooloose/nerdcommenter'
" Plugin 'elzr/vim-json'
Plugin 'davidhalter/jedi-vim'
call vundle#end()

filetype plugin indent on
" set background=dark
let g:powerline_pycmd = 'py3'
"colorscheme solarized"
if has('mac')
    set  rtp+=/usr/local/lib/python3.6/site-packages/powerline/bindings/vim"
elseif has('unix')
    set  rtp+=/usr/lib/python3.6/site-packages/powerline/bindings/vim"
endif

set encoding=utf-8 fileencoding=utf-8 termencoding=utf-8
set nobackup nowritebackup noswapfile autoread 				" no backup or swap
set secure 								" disable unsafe comnds
set wildmenu
set backspace=indent,eol,start
set nofoldenable
set scrolloff=20
set cursorline
set laststatus=2
set number
set shiftwidth=4                                                        " Indetation size
set tabstop=4                                                           " Tab indentaion
set softtabstop=0
set smarttab
set autoindent
set smartindent
set expandtab
set list
set listchars=tab:▷⋅,trail:⋅,nbsp:⋅
set incsearch   "find the next match as we type the search
set hlsearch    "hilight searches by default

" turn off search highlight
noremap <leader><space> :nohlsearch<CR>

" set textwidth=80
" let &colorcolumn=join(range(81,999),",")
let &colorcolumn=81

" Spelling in English for markdown files
autocmd BufRead,BufNewfile *.md setlocal spell spelllang=en_us

" Appearance
syntax enable
set t_Co=256
hi ColorColumn cterm=none ctermfg=none ctermbg=238
hi MatchParen  cterm=bold ctermfg=none ctermbg=none
hi CursorLine  cterm=none ctermfg=none ctermbg=238

"" NERDCommenter
" Add spaces after comment delimiters by default "
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Set a language to use its alternate delimiters by default
" let g:NERDAltDelims_java = 1
" Add your own custom formats or override the defaults
" let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

"" NERDTree
" open NERDTree automatically when vim starts up on opening a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
" map a specific key or shortcut to open NERDTree
map <C-n> :NERDTreeToggle<CR>

" Syntastic settings
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
" let g:syntastic_python_checkers=["pycodestyle"]
let g:syntastic_python_checkers=["flake8"]
" Ignore some errors from flake8
" E501 - line too long (# > 79 characters)
" E302 - expected 2 blank lines, found # -> After function `def`
" F811 - imported but not used
" F401 - imported but not used
" F403 - unable to detect undefined names
" W291 - trailing whitespace
" E231 - missing whitespace after ':'
" E203 - whitespace before ','
" E225 - missing whitespace around operator
" W293 - blank line contains whitespace
" E226 - missing whitespace around arithmetic operator
" E701 - multiple statements on one line (colon)
" E265 - block comment should start with '# '
" E261 - at least two spaces before inline comment
" E303 - too many blank lines
" E266 - too many leading '#' for block comment
" E262 - inline comment should start with '# '
" E241 - multiple spaces after ','
" E201 - whitespace after '['
" E202 - whitespace after ']'
" E211 - whitespace before '('
" E305 - expected 2 blank lines after class or function definition, found 1
" let g:syntastic_python_flake8_args="--ignore=E501,E302,F811,F401,F403,W291,E231,E203,E225,W293,E226,E701,E265,E261,E303,E266,E262,E241,E201,E202,E211,E305"
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 0
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

