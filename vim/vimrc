set nocompatible              " be iMproved, required
filetype off                  " required by Vundle

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
" Plugin 'Valloric/YouCompleteMe'
Plugin 'rust-lang/rust.vim'
call vundle#end()

filetype plugin indent on
" set background=dark
let g:powerline_pycmd = 'py3'
"colorscheme solarized"
set  rtp+=/usr/lib/python3.6/site-packages/powerline/bindings/vim"

set encoding=utf-8 fileencoding=utf-8 termencoding=utf-8
set nobackup nowritebackup noswapfile autoread 				" no backup or swap
set secure 								" disable unsafe comnds
set wildmenu
set backspace=indent,eol,start
set nofoldenable
set scrolloff=20
set cursorline
set laststatus=2
set number
set shiftwidth=4                                                        " Indetation size
set tabstop=4                                                           " Tab indentaion
set softtabstop=0
set smarttab
set autoindent
set smartindent
set expandtab
" set textwidth=80
" let &colorcolumn=join(range(81,999),",")
let &colorcolumn=81

" Appearance
syntax enable
set t_Co=256
hi ColorColumn cterm=none ctermfg=none ctermbg=236
hi MatchParen  cterm=bold ctermfg=none ctermbg=none
hi CursorLine  cterm=none ctermfg=none ctermbg=238

"" NERDCommenter
" Add spaces after comment delimiters by default "
let g:NERDSpaceDelims = 1
" Use compact syntax for prettified multi-line comments
let g:NERDCompactSexyComs = 1
" Align line-wise comment delimiters flush left instead of following code indentation
let g:NERDDefaultAlign = 'left'
" Set a language to use its alternate delimiters by default
" let g:NERDAltDelims_java = 1
" Add your own custom formats or override the defaults
" let g:NERDCustomDelimiters = { 'c': { 'left': '/**','right': '*/' } }
" Allow commenting and inverting empty lines (useful when commenting a region)
let g:NERDCommentEmptyLines = 1
" Enable trimming of trailing whitespace when uncommenting
let g:NERDTrimTrailingWhitespace = 1

"" NERDTree
" open NERDTree automatically when vim starts up on opening a directory
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 1 && isdirectory(argv()[0]) && !exists("s:std_in") | exe 'NERDTree' argv()[0] | wincmd p | ene | endif
" map a specific key or shortcut to open NERDTree
map <C-n> :NERDTreeToggle<CR>
