# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples
#
# ~/.bashrc
#

# xhost +SI:localuser:root

if [[ $TERMINIX_ID ]]; then
        source /etc/profile.d/vte.sh
fi

if [[ -f  /etc/profile.d/perlbin.sh ]]; then
	source /etc/profile.d/perlbin.sh
fi


powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
if [[ "$(lsb_release -is)" == "Arch" ]]; then
    source /usr/lib/python3.6/site-packages/powerline/bindings/bash/powerline.sh
else
    source /usr/local/lib/python2.7/dist-packages/powerline/bindings/bash/powerline.sh
fi


# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green
UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

# Functions
get_dir(){
    printf "%s" $(pwd | sed "s:$HOME:~:")
}

get_sha(){
    git rev_parse --short HEAD 2>/dev/null
}
if [[ -e /usr/share/git/completion ]]; then
	source /usr/share/git/completion/git-completion.bash
	source /usr/share/git/completion/git-prompt.sh
fi

####################### IGNORE WHILE POWERLINE ##############################
# To be ignored while trying powerline

## Variables for git_prompt
# export GIT_PS1_SHOWDIRTYSTATE=true
# export GIT_PS1_SHOWSTASHSTATE=true
# export GIT_PS1_SHOWUNTRACKEDFILES=true
## Explicitly unset color (default anyhow). Use 1 to set it.
# export GIT_PS1_SHOWCOLORHINTS=true
# export GIT_PS1_DESCRIBE_STYLE="branch"
# export GIT_PS1_SHOWUPSTREAM="auto git"
########################### END IGNORE #####################################
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac
# [[ $- != *i* ]] && return

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
# [ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
# if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
#     debian_chroot=$(cat /etc/debian_chroot)
# fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

###################### TEST POWERLINE ###################################

# if [ "$color_prompt" = yes ];    then
#     ps1_pre_git="\["$BPurple"\]\u@\h:\W\["$Color_Off"\]"
#     # ps1_pre_git="\[\e[1;35m\]\W\[\e[0m\]"
#     ps1_post_git="\["$BYellow"\]\\\$ \["$Color_Off"\]"
#     # ps1_post_git="\[\e[1;33m\]\\\$ >\[\e[0m\]"
#     # ps1_git="\[\e[1;36m\][%s $(get_sha)\[\e[1;36m]\]"
#     ps1_git="\["$BCyan"\][%s $(get_sha)\["$BCyan"]\]"
#     PROMPT_COMMAND='__git_ps1 "${ps1_pre_git}" "${ps1_post_git}" ""'
# else
#     # PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
#     PS1='\u@\h:\w\$ '
# fi


# unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
# case "$TERM" in
# xterm*|rxvt*)
#     if [ "$XDG_SESSION_DESKTOP" == "i3" ]; then
#         PROMPT_COMMAND='printf "\e[5 q\033]0;$USER@$HOSTNAME:$(get_dir)\007";\
#         __git_ps1 "${ps1_pre_git}" "${ps1_post_git}" "\[\e[1;36m\][%s $(get_sha)\[\e[1;36m]\]"'
#     else
#         PROMPT_COMMAND='printf "\033]0;$USER@$HOSTNAME:$(get_dir)\007";\
#         __git_ps1 "${ps1_pre_git}" "${ps1_post_git}" "\[\e[1;36m\][%s $(get_sha)\[\e[1;36m]\]"'
#     fi
#     ;;
# *)
#     ;;
# esac

################### END TEST POWERLINE #######################################

######################## DEFAULT UBUNTU #####################################
if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac
###################### END DEFAULT UBUNTU ###################################




# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls -X --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# There are some issues with spotify fonts using infinality
if [[ -f ~/.fix_spotiy_font ]]; then
    . ~/.settings/fix_spotiy_font
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export EDITOR="gedit"
if [[ -f /usr/bin/lesspipe  ]]; then
	export LESSOPEN="| /usr/share/source-highlight/src-hilite-lesspipe.sh %s"
elif [[ -f /usr/bin/lesspipe.sh ]]; then
	export LESSOPEN="|lesspipe.sh %s"
fi

#statements
export LESS='-R '
export SAL_USE_VCLPLUGIN=gtk3 lowriter

# For QT5 applications running in wayland.
export QT_QPA_PLATFORM=wayland-egl

# export FREEGLUT="/home/artorias/Documents/School/cse/cse165/lab06/08_plot_graphical_objects"
# export GRPPRJ="/home/artorias/Documents/School/cse/group_project"
export PATH=$PATH:$HOME/.gem/ruby/2.2.0/bin
export PATH=$PATH:$HOME/.local/bin
export GPGKEY=08D77929

if [ -f ~/.config/exercism/exercism_completion.bash ]; then
    . ~/.config/exercism/exercism_completion.bash
fi


# Style for Qt Apps
# export QT_STYLE_OVERRIDE=adwaita
# export QT_QPA_PLATFORMTHEME=gtk2
export QT_QPA_PLATFORMTHEME="qt5ct"

# source setup.bash for cse180 class Robotics
if [[ -f /opt/ros/indigo/setup.bash ]] && [[ -f $HOME/.config/ros/indigo_startup ]]; then
    if [[ "$(lsb_release -sc)" == "freya" ]]; then
        export ROS_OS_OVERRIDE=ubuntu:14.04
    fi
    source $HOME/.config/ros/indigo_startup
fi

